{"version":3,"sources":["App/AppProvider.js","App/AppLayout.js","App/AppBar.js","Settings/WelcomeMessage.js","Shared/Styles.js","Settings/ConfirmButton.js","Shared/Page.js","Shared/Tile.js","Settings/CoinHeaderGrid.js","Shared/CoinImage.js","Settings/CoinTile.js","Settings/CoinGrid.js","Settings/Search.js","Settings/index.js","Dashboard/PriceTile.js","Dashboard/PriceGrid.js","Dashboard/CoinSpotlight.js","Dashboard/HighchartsConfig.js","Dashboard/HighchartsTheme.js","Dashboard/ChartSelect.js","Dashboard/PriceChart.js","Dashboard/index.js","Shared/Content.js","App/index.js","serviceWorker.js","index.js"],"names":["global","fetch","require","cc","setApiKey","AppContext","React","createContext","MAX_FAVORITES","TIME_UNITS","AppProvider","_React$Component","props","_this","Object","_Users_winjingjie_Bill_cryptodash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","_Users_winjingjie_Bill_cryptodash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__","_Users_winjingjie_Bill_cryptodash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__","call","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","_Users_winjingjie_Bill_cryptodash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__","_Users_winjingjie_Bill_cryptodash_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default","a","mark","_callee","coinList","wrap","_context","prev","next","sent","Data","setState","stop","_callee2","prices","_context2","state","firstVisit","abrupt","console","log","filter","price","keys","length","_callee3","results","historical","_context3","name","currentFavorite","data","map","ticker","index","moment","subtract","_Users_winjingjie_Bill_cryptodash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","timeInterval","valueOf","USD","_callee4","returnData","i","priceData","_context4","favorites","priceFull","push","t0","warn","promises","units","priceHistorical","toDate","Promise","all","addCoin","key","_Users_winjingjie_Bill_cryptodash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","removeCoin","_","pull","isInFavorites","includes","confirmFavorites","page","localStorage","setItem","JSON","stringify","setCurrentFavorite","sym","_Users_winjingjie_Bill_cryptodash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","parse","getItem","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","savedSettings","_Users_winjingjie_Bill_cryptodash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_9__","_Users_winjingjie_Bill_cryptodash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__","cryptoDashData","react__WEBPACK_IMPORTED_MODULE_10___default","createElement","Provider","children","Component","styled","div","_templateObject","Logo","AppBar_templateObject","Bar","_templateObject2","ControlButtonElem","_templateObject3","active","css","_templateObject4","hidden","_templateObject5","ControlButton","_ref","react_default","Consumer","_ref2","lower","onClick","charAt","toUpperCase","substr","AppBar","WelcomeMessage","lightBlueBackground","concat","backgroundColor2","subtleBoxShadow","greenBoxShadow","ConfirmButtonStyled","ConfirmButton_templateObject","CenterDiv","ConfirmButton_templateObject2","ConfirmButton","Page","Tile","Tile_templateObject","SelectableTile","Tile_templateObject2","DeletableTile","Tile_templateObject3","DisabledTile","Tile_templateObject4","CoinHeaderGridStyled","CoinHeaderGrid_templateObject","CoinSymbol","CoinHeaderGrid_templateObject2","DeleteIcon","CoinHeaderGrid_templateObject3","CoinHeaderGrid","symbol","topSection","CoinImage","img","CoinImage_templateObject","spotlight","CoinImage_templateObject2","Shared_CoinImage","coin","alt","src","ImageUrl","clickCoinHandler","coinKey","CoinTile","TileClass","CoinName","Symbol","CoinGridStyled","CoinGrid_templateObject","getCoinsToDisplay","filterCoins","slice","getLowerSectionCoins","CoinGrid","SearchGrid","Search_templateObject","SearchInput","input","Search_templateObject2","handleFilter","debounce","inputValue","setFilterCoins","coinSymbols","coinNames","allStringsToSearch","fuzzyResults","fuzzy","result","string","pickBy","symKey","coinName","Search","onKeyUp","e","target","Settings","JustifyRight","PriceTile_templateObject","JustifyLeft","PriceTile_templateObject2","TickerPrice","PriceTile_templateObject3","ChangePct","PriceTile_templateObject4","red","PriceTile_templateObject5","numberFormat","number","PriceTileStyled","_templateObject6","compact","_templateObject7","_templateObject8","ChangePercent","CHANGEPCT24HOUR","PriceTile","PRICE","PriceTileCompact","_ref3","Dashboard_PriceTile","_ref4","_ref5","PriceGrid","PriceGrid_templateObject","Dashboard_PriceGrid","SpotlightName","h2","CoinSpotlight_templateObject","CoinSpotlight","HighchartsConfig","title","text","yAxis","xAxis","type","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","HighchartsTheme","colors","chart","backgroundColor","borderColor","borderWidth","className","plotBackgroundColor","plotBorderWidth","style","color","font","subtitle","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","fontFamily","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","itemHoverStyle","itemHiddenStyle","credits","enabled","navigation","buttonOptions","symbolStroke","hoverSymbolStroke","theme","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","select","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","legendBackgroundColor","background2","dataLabelsColor","textColor","maskColor","ChartSelect_templateObject","ReactHighcharts","Highcharts","setOptions","PriceChart","ChartSelect","defaultValue","onChange","ReactHighcharts_default","config","highchartsConfig","ChartGrid","Dashboard_templateObject","Dashboard","Content","App","AppLayout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bb000adb.chunk.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nglobal.fetch = require('node-fetch')\nconst cc = require('cryptocompare');\ncc.setApiKey('2e45dd49dbba7cc4eb0d088fc8a96183d2e7142bb8e19fa3f21be1055eab39ff')\n\nexport const AppContext = React.createContext();\n\nconst MAX_FAVORITES = 10;\nconst TIME_UNITS = 10;\n\nexport class AppProvider extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      page: 'dashboard',\n      favorites: ['BTC', 'ETH', 'XMR', 'DOGE'],\n      timeInterval: 'months',\n      ...this.savedSettings(),\n      setPage: this.setPage,\n      addCoin: this.addCoin,\n      removeCoin: this.removeCoin,\n      isInFavorites: this.isInFavorites,\n      confirmFavorites: this.confirmFavorites,\n      setCurrentFavorite: this.setCurrentFavorite,\n      setFilteredCoins: this.setFilteredCoins,\n      changeChartSelect: this.changeChartSelect\n    }\n  }\n\n  componentDidMount = () => {\n    this.fetchCoins();\n    this.fetchPrices();\n    this.fetchHistorical();\n  }\n// when it mounts, will fetch prices only after the first visit\n  fetchCoins = async () => {\n    let coinList = (await cc.coinList()).Data;\n    this.setState({coinList});\n  }\n\n  fetchPrices = async () => {\n    if(this.state.firstVisit) return;\n    let prices = await this.prices();\n    console.log(prices)\n    //filter out the empty price objects \n    prices = prices.filter(price => Object.keys(price).length);\n    this.setState({prices});\n  }\n// if first visit, no need to fetch anything\n\n\n  fetchHistorical = async () => {\n    if (this.state.firstVisit) return;\n    let results = await this.historical();\n    let historical = [\n      {\n        name: this.state.currentFavorite,\n        data: results.map((ticker, index) => [\n          moment().subtract({[this.state.timeInterval]: TIME_UNITS - index}).valueOf(),\n          ticker.USD\n        ])\n      }\n    ]\n    console.log(results)\n    this.setState({historical});\n  }\n// parse the results into data that high charts can understand\n// name = name of the chart\n// use highchart config.js to see the data structure\n// ticker = is the actrual value of the coin\n// return an array of x and y value\n// x values is the date where moments is counting\n// \n\n  prices = async () => {\n    let returnData = [];\n    for(let i = 0; i < this.state.favorites.length; i++){\n      try {\n        let priceData = await cc.priceFull(this.state.favorites[i], 'USD');\n        returnData.push(priceData);\n      } catch (e){\n        console.warn('Fetch price error: ', e);\n      }\n    }\n    return returnData;\n  }\n// get the prices of the coins in USD\n//if there is any error then we will catch the error\n  historical = () => {\n    let promises = [];\n    for (let units = TIME_UNITS; units > 0; units--){\n      promises.push(\n        cc.priceHistorical(\n          this.state.currentFavorite,\n          ['USD'],\n          moment()\n          .subtract({[this.state.timeInterval]: units})\n          .toDate()\n        )\n      )\n    }\n    return Promise.all(promises);\n  }\n// for loop ten units of time to fetch their historial data\n// use moment library to loop over time. \n// only resolve when all the promises are met\n\n  addCoin = key => {\n    let favorites = [...this.state.favorites];\n    if(favorites.length < MAX_FAVORITES){\n      favorites.push(key);\n      this.setState({favorites});\n    }\n  }\n\n  removeCoin = key => {\n    let favorites = [...this.state.favorites];\n    this.setState({favorites: _.pull(favorites, key)})\n    //lodash command called pull, pull this value from the array and return a nerw array\n  }\n\n  isInFavorites = key => _.includes(this.state.favorites, key)\n  // lodash function, to see if the coin is already in favorites. if its already in favourite, an if else function will run in cointile to set the div class to disable tile\n\n  confirmFavorites = () => {\n    let currentFavorite = this.state.favorites[0];\n    this.setState({\n      firstVisit: false,\n      page: 'dashboard',\n      currentFavorite,\n      prices: null,\n      historical: null\n    }, () => {\n        this.fetchPrices();\n        this.fetchHistorical();\n    });\n    localStorage.setItem('cryptoDash', JSON.stringify({\n      favorites: this.state.favorites,\n      currentFavorite\n    }));\n  }\n// after confirmFavroite runs, fetch price and historial prices \n// curretnfavorute is stored in local storage\n// adding nulls to remove the previous data that is rendrered on the chart\n\n\n  setCurrentFavorite = (sym) => {\n    this.setState({\n      currentFavorite: sym,\n      historical: null\n    }, this.fetchHistorical);\n\n    localStorage.setItem('cryptoDash', JSON.stringify({\n      ...JSON.parse(localStorage.getItem('cryptoDash')),\n      currentFavorite: sym\n    }))\n  }\n\n  // sym to set the current fav \n  // set the state to the local storage and add the current fav to local storage\n  // historial null to clear the prev render\n// after setting the state, it will fetch historical data \n\n  savedSettings(){\n    let cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\n    if(!cryptoDashData){\n      return {page: 'settings', firstVisit: true}\n    }\n    let {favorites, currentFavorite} = cryptoDashData;\n    return {favorites, currentFavorite};\n  }\n//if dont have cryptoDashData, pull favroites and currentfavorites from local storage\n// go to developer tools and enter application, local stroage to see the fav and current fav\n\n  setPage = page => this.setState({page})\n\n  setFilteredCoins = (filteredCoins) => this.setState({filteredCoins})\n// give a list of coins that we can set on the app\n  changeChartSelect = (value) => {\n    console.log(value);\n    this.setState({timeInterval: value, historical: null}, this.fetchHistorical);\n  }\n// change months to the event target value which is days, weeks and months\n  render(){\n    return (\n      <AppContext.Provider value={this.state}>\n        {this.props.children}\n      </AppContext.Provider>\n    )\n  }\n\n}\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  padding: 40px;\n`;\n","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {AppContext} from \"./AppProvider\";\n\nconst Logo = styled.div`\n  font-size: 1.5em; \n`\n\nconst Bar = styled.div`\n  display: grid; \n  margin-bottom: 40px; \n  grid-template-columns: 180px auto 100px 100px; \n`\n\nconst ControlButtonElem = styled.div`\n  cursor: pointer; \n  ${props => props.active && css`\n    text-shadow: 0px 0px 60px #03ff03;\n  `}\n  ${props => props.hidden && css`\n    display: none; \n  `}\n`\n// hide the dashboard if this is the first visit\nfunction toProperCase(lower){\n  return lower.charAt(0).toUpperCase() + lower.substr(1);\n}\n\nfunction ControlButton({name}){\n  return (\n    <AppContext.Consumer>\n      {({firstVisit, page, setPage}) => (\n        <ControlButtonElem\n          active={page === name}\n          onClick={()=> setPage(name)}\n          hidden={firstVisit && name === 'dashboard'}\n        >\n          {toProperCase(name)}\n        </ControlButtonElem>\n        )}\n    </AppContext.Consumer>\n  )\n}\n// hide the dashboard if this is the first visit\n// add in name prop so that the control button knows whats happening lol\nexport default function(){\n  return (\n    <Bar>\n      <Logo> CryptoDash </Logo>\n      <div/>\n      <ControlButton active name=\"dashboard\"/>\n      <ControlButton name=\"settings\"/>\n    </Bar>\n  );\n}\n","import React from \"react\";\nimport { AppContext } from \"../App/AppProvider\";\n\nexport default function ({ firstVisit }) {\n  return (\n    <AppContext.Consumer>\n      {({ firstVisit }) => firstVisit ?\n      <div>\n        Welcome to CryptoDash, please select your favorite coins to begin.\n      </div>\n      : null }\n    </AppContext.Consumer>\n  );\n}\n","const theme = 'dark';\n// const theme = 'light';\nexport const lightTheme = theme === 'light';\n\nexport const color = lightTheme ? 'white' : '#061a44';\nexport const color2 = lightTheme ? 'white' : '#010e2c';\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\n\nif (lightTheme) {\n  document.body.style.background = '#e1eaee';\n  document.body.style.color = '#061a44';\n}\n\nexport const lightBlueBackground = `background-color: ${color}`;\nexport const backgroundColor2 = `background-color: ${color2};`;\nexport const greenBackgroundColor = `background-color: ${color3};`;\n\nexport const fontColorGreen = `color: #03A9F4`;\nexport const fontColorWhite = `color: white`;\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#121d5b'}`;\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\n\nexport const fontSizeBig = 'font-size: 2em';\nexport const fontSize1 = 'font-size: 1.5em;';\nexport const fontSize2 = 'font-size: 1.0em';\nexport const fontSize3 = 'font-size: .75em';\n\nexport const textAlignCenter = 'text-align: center;';","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../App/AppProvider\";\nimport {fontSize1, greenBoxShadow, color3} from '../Shared/Styles'\n\n\nconst ConfirmButtonStyled = styled.div`\n  margin: 20px;\n  color: ${color3};\n  ${fontSize1}\n  padding: 5px;\n  cursor: pointer;\n  &:hover {\n      ${greenBoxShadow}\n  }\n  \n`;\n\nexport const CenterDiv = styled.div`\n  display: grid;\n  justify-content: center;\n`;\n\nexport default function () {\n  return (\n    <AppContext.Consumer>\n      {({ confirmFavorites }) => (\n        <CenterDiv>\n          <ConfirmButtonStyled onClick={confirmFavorites}>\n          Confirm Favorites\n          </ConfirmButtonStyled>\n        </CenterDiv>\n      )}\n    </AppContext.Consumer>\n  );\n}\n","import React from 'react';\nimport {AppContext} from '../App/AppProvider';\n\nexport default function ({ name, children }) {\n    return <AppContext.Consumer>\n        {({page}) => {\n            if (page !== name) {\n                return null;\n            }\n            return <div> {children} </div>;\n        }}\n    </AppContext.Consumer>\n}","import styled from 'styled-components';\nimport {subtleBoxShadow, lightBlueBackground, greenBoxShadow, redBoxShadow} from \"./Styles\";\n\nexport const Tile = styled.div`\n  ${subtleBoxShadow}\n  ${lightBlueBackground}\n  padding: 10px;   \n`\n\nexport const SelectableTile = styled(Tile)`\n  &:hover {\n    cursor: pointer; \n    ${greenBoxShadow}\n  }\n`\n\nexport const DeletableTile = styled(SelectableTile)`\n\t&:hover{\n\t\tcursor: pointer; \n\t\t${redBoxShadow}\n\t}\n`;\n\nexport const DisabledTile = styled(Tile)`\n\tpointer-events: none;\n  opacity: 0.4;\n`;\n// when set pointer events none you can't select anything","import React from 'react';\nimport styled from \"styled-components\";\nimport {DeletableTile} from \"../Shared/Tile\";\n\nexport const CoinHeaderGridStyled = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\nexport const CoinSymbol = styled.div`\n  justify-self: right;\n`;\n\nconst DeleteIcon = styled.div`\n  justify-self: right;\n  display: none; \n  ${DeletableTile}:hover & {\n    display: block;\n    color: red;\n  }\n`;\n\n\nexport default function ({name, symbol, topSection}) {\n  return <CoinHeaderGridStyled>\n    <div> {name} </div>\n    {topSection ? (\n      <DeleteIcon> X </DeleteIcon>\n    ) : (\n      <CoinSymbol> {symbol} </CoinSymbol>\n    )}\n  </CoinHeaderGridStyled>;\n}\n","import React from 'react';\nimport styled, {css} from 'styled-components';\n\nconst CoinImage = styled.img`\n  height: 50px; \n  ${props => props.spotlight && css`\n    height: 200px; \n    margin: auto; \n    display: block; \n  `}\n`\n// if spotlight the image height becomes 200\n\nexport default function ({coin, spotlight}) {\n  return <CoinImage\n    spotlight={spotlight}\n    alt={coin.CoinSymbol}\n    src={`http://cryptocompare.com/${\n      coin.ImageUrl\n      }`}\n  />;\n}\n","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\nimport {SelectableTile, DisabledTile, DeletableTile} from \"../Shared/Tile\";\nimport CoinHeaderGrid from './CoinHeaderGrid';\nimport CoinImage from '../Shared/CoinImage';\n\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin){\n  return topSection ? () => {\n    removeCoin(coinKey)\n  } : () => {\n    addCoin(coinKey)\n  }\n}\n\nexport default function({coinKey, topSection}){\n  return <AppContext.Consumer>\n    {({coinList, addCoin, removeCoin, isInFavorites}) => {\n  \n      let coin = coinList[coinKey];\n\n      let TileClass = SelectableTile;\n      if(topSection){\n        TileClass = DeletableTile;\n      }else if(isInFavorites(coinKey)){\n        TileClass = DisabledTile;\n      }\n      // when tile is in favorites, pointer events is none, imported from Tile.js\n      return <TileClass\n        onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}\n      >\n        <CoinHeaderGrid\n          topSection={topSection}\n          name={coin.CoinName}\n          symbol={coin.Symbol}/>\n        <CoinImage coin={coin}/>\n      </TileClass>\n    }}\n  </AppContext.Consumer>\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\nimport CoinTile from \"./CoinTile\";\n\nexport const CoinGridStyled = styled.div`\n  display: grid;   \n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr)); \n  grid-gap: 15px; \n  margin-top: 40px; \n`\n\nfunction getLowerSectionCoins(coinList, filteredCoins){\n  return (filteredCoins && Object.keys(filteredCoins)) ||\n    Object.keys(coinList).slice(0, 100)\n}\n// if we have filtered coins, we want to use that instead of the first 100 coins\n\nfunction getCoinsToDisplay(coinList, topSection, favorites, filterCoins){\n  return topSection ? favorites : getLowerSectionCoins(coinList, filterCoins);\n}\n\nexport default function ({topSection}){\n  return (\n    <AppContext.Consumer>\n    {({coinList, favorites, filteredCoins}) => (\n      <CoinGridStyled>\n        {getCoinsToDisplay(coinList, topSection, favorites, filteredCoins).map(coinKey =>\n          <CoinTile key={coinKey} topSection={topSection} coinKey={coinKey}/>\n        )}\n      </CoinGridStyled>\n    )}\n  </AppContext.Consumer>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {backgroundColor2, fontSize2} from \"../Shared/Styles\";\nimport {AppContext} from \"../App/AppProvider\";\nimport _ from 'lodash';\nimport fuzzy from 'fuzzy';\n\nconst SearchGrid = styled.div`\n  display: grid; \n  grid-template-columns: 200px 1fr; \n`\n//put it to the left\n\nconst SearchInput = styled.input`\n  ${backgroundColor2}\n  ${fontSize2}\n  border: 1px solid; \n  height: 25px; \n  color: #1163c9;\n  place-self: center left; \n`\n// place self, place it in the center and hug it to the left \n// place-self:center left = align self:center and justify self: left\n\nconst handleFilter = _.debounce((inputValue, coinList, setFilterCoins) => {\n  // debounce delay the function / preventing the user to do too many eevents at one time\n\n  let coinSymbols = Object.keys(coinList);\n    // Get all the coin symbols\n\n  let coinNames = coinSymbols.map(sym => coinList[sym].CoinName)\n    // Get all the coin names, map symbol to name\n\n  let allStringsToSearch = coinSymbols.concat(coinNames);\n  // combine all the symbol and name of the coin \n  //to return the same results when BTC and Bitcoin is searched\n\n  let fuzzyResults = fuzzy\n    .filter(inputValue, allStringsToSearch, {})\n    .map(result => result.string);\n// use fuzzy to search, fuzzy returns an object\n// use map and .string to transform the object into a string \nconsole.log(fuzzyResults)\n\n  let filteredCoins = _.pickBy(coinList, (result, symKey) => {\n    let coinName = result.CoinName;\n    return (_.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName));\n  });\n  console.log(filteredCoins)\n  setFilterCoins(filteredCoins);\n}, 100);\n// \n// 500 is half a second of delay // changed to 100 to make it feel faster\nfunction filterCoins(e, setFilteredCoins, coinList){\n  let inputValue = e.target.value;\n  if(!inputValue){\n    setFilteredCoins(null);\n    return;\n  }\n  handleFilter(inputValue, coinList, setFilteredCoins);\n}\n// if the user has no input value, the callback to null (which goes back to the first 100 coins)\n\n\nexport default function(){\n  return (\n    <AppContext.Consumer>\n      {({setFilteredCoins, coinList}) =>\n        <SearchGrid>\n          <h2>Search all coins</h2>\n          <SearchInput onKeyUp={(e) => filterCoins(e, setFilteredCoins, coinList)}/>\n        </SearchGrid>\n      }\n    </AppContext.Consumer>\n  );\n}\n// onKeyUp, ","import React from 'react';\nimport WelcomeMessage from './WelcomeMessage'\nimport ConfirmButton from './ConfirmButton';\nimport Page from '../Shared/Page';\nimport CoinGrid from './CoinGrid';\nimport Search from './Search';\n\nexport default function(){\n  return <Page name=\"settings\">\n    <WelcomeMessage/>\n    <CoinGrid topSection/>\n    <ConfirmButton/>\n    <Search/>\n    <CoinGrid/>\n  </Page>\n}\n","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {SelectableTile} from \"../Shared/Tile\";\nimport {fontSize3, fontSizeBig, greenBoxShadow} from \"../Shared/Styles\";\nimport {CoinHeaderGridStyled} from \"../Settings/CoinHeaderGrid\";\nimport {AppContext} from \"../App/AppProvider\";\n\nconst JustifyRight = styled.div`\n  justify-self: right; \n`\n\nconst JustifyLeft = styled.div`\n  justify-self: left; \n`\n\nconst TickerPrice = styled.div`\n  ${fontSizeBig};\n`\n\nconst ChangePct = styled.div`\n  color: green; \n  ${props => props.red && css`\n    color: red; \n  `}\n`\n\nconst numberFormat = number => {\n  return +(number + '').slice(0, 7);\n}\n\nconst PriceTileStyled = styled(SelectableTile)`\n  ${props => props.compact && css`\n    display: grid; \n    ${fontSize3}\n    grid-gap: 5px; \n    grid-template-columns: repeat(3, 1fr); \n    justify-items: right; \n  `}\n  \n  ${props => props.currentFavorite && css`\n    ${greenBoxShadow}\n    pointer-events: none; \n  `}\n`\n// if comact change colums to 3 \n// add greenshadow to current selected coin\n// pointer events to prevent selecting current favorite \nfunction ChangePercent({data}){\n  return (\n    <JustifyRight>\n      <ChangePct red={data.CHANGEPCT24HOUR < 0}>\n        {numberFormat(data.CHANGEPCT24HOUR)}%\n      </ChangePct>\n    </JustifyRight>\n  );\n}\n// percent change red or green abnd justified to right\n\nfunction PriceTile({sym, data, currentFavorite, setCurrentFavorite}){\n  return (\n    <PriceTileStyled onClick={setCurrentFavorite} currentFavorite={currentFavorite}>\n      <CoinHeaderGridStyled>\n        <div> {sym} </div>\n        <ChangePercent data={data}/>\n      </CoinHeaderGridStyled>\n      <TickerPrice>\n        ${numberFormat(data.PRICE)}\n      </TickerPrice>\n    </PriceTileStyled>\n  );\n}\n//normal big price tile \n// on click set curretn fav\n\nfunction PriceTileCompact({sym, data, currentFavorite, setCurrentFavorite}){\n  return (\n    <PriceTileStyled onClick={setCurrentFavorite} compact currentFavorite={currentFavorite}>\n      <JustifyLeft> {sym} </JustifyLeft>\n      <ChangePercent data={data}/>\n      <div>\n        ${numberFormat(data.PRICE)}\n      </div>\n    </PriceTileStyled>\n  );\n}\n\n//compact price tile, same as the bit price tile just that changec to 3 coloums\n// on click set curretn fav\n//can check on application  => local storage => localhost:3000\n\n\nexport default function({price, index}){\n  let sym = Object.keys(price)[0];\n  let data = price[sym]['USD'];\n  let TileClass = index < 5 ? PriceTile : PriceTileCompact;\n  return (\n    <AppContext.Consumer>\n      {({currentFavorite, setCurrentFavorite}) =>\n        <TileClass\n          sym={sym}\n          data={data}\n          currentFavorite={currentFavorite === sym}\n          setCurrentFavorite={() => setCurrentFavorite(sym)}\n        >\n        </TileClass>\n      }\n    </AppContext.Consumer>\n  )\n}\n// sym is coin symbol\n// data is price and in USD\n// if tileclass is less than 5, render Tile. If not render compactTile\n// current fav or sym to check which tile did the user clicked. If sym = currentfav, the that tile is the current fav","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\nimport PriceTile from './PriceTile';\n\nconst PriceGrid = styled.div`\n  display: grid; \n  grid-template-columns: repeat(5, 1fr); \n  grid-gap: 15px; \n  margin-top: 40px; \n`\n\nexport default function () {\n  return (\n    <AppContext.Consumer>\n      {({prices}) => (\n        <PriceGrid>\n          {prices.map((price, index) => (\n            <PriceTile key={`priceTile-${index}`} index={index} price={price}/>\n          ))}\n        </PriceGrid>\n      )}\n    </AppContext.Consumer>\n  );\n}\n// index is index of the tile\n// priceTile is to add key \n","import React from 'react';\nimport styled from 'styled-components';\nimport {Tile} from \"../Shared/Tile\";\nimport {AppContext} from \"../App/AppProvider\";\nimport CoinImage from '../Shared/CoinImage';\n\nconst SpotlightName = styled.h2`\n  text-align: center; \n`\n// potlight name to be in the middle \nexport default function (){\n  return (\n    <AppContext.Consumer>\n      {({currentFavorite, coinList}) =>\n        <Tile>\n          <SpotlightName> {coinList[currentFavorite].CoinName} </SpotlightName>\n          <CoinImage spotlight coin={coinList[currentFavorite]}/>\n        </Tile>\n      }\n    </AppContext.Consumer>\n  )\n}\n\n\n// get coinimage amd style the spotlight \n// currentfavorite from app provider and coinlist to get image\n// access coin name from fav from coinlist ","export default function (historical) {\n  return {\n    title: {\n      text: ''\n    },\n\n    yAxis: {\n      title: {\n        text: 'Price'\n      }\n    },\n    xAxis: {type: 'datetime'},\n  //change from weird syntax to actual date and time\n    legend: {\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'middle'\n    },\n\n    plotOptions: {\n      series: {\n        label: {\n          connectorAllowed: false\n        },\n        pointStart: 2010\n      }\n    },\n\n    series: historical,\n    // get the historical value from fetch-historial \n\n    responsive: {\n      rules: [{\n        condition: {\n          maxWidth: 500\n        },\n        chartOptions: {\n          legend: {\n            layout: 'horizontal',\n            align: 'center',\n            verticalAlign: 'bottom'\n          }\n        }\n      }]\n    }\n  };\n}\n\n// npm i react-highcharts\n// add from codepen https://codepen.io/pen/?&editable=true=https%3A%2F%2Fwww.highcharts.com%2Fsamples%2Fcodepen%2Fhighcharts%2Fdemo%2Fline-basic\n// ","import {lightTheme} from \"../Shared/Styles\";\n\nexport default {\n  colors: [\n    '#61d936',\n    '#552ccb',\n    '#1163c9',\n    '#04A1EE',\n    '#08C6E0',\n    '#146B9E',\n    '#F376C1',\n    '#1B2839'\n  ],\n  chart: {\n    backgroundColor: lightTheme ? 'white' : '#061a44',\n    borderColor: '#000000',\n    borderWidth: 0,\n    className: 'dark-container',\n    plotBackgroundColor: lightTheme ? 'white' : '#061a44',\n    plotBorderWidth: 0\n  },\n  title: {\n    style: {\n      color: '#C0C0C0',\n      font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n    }\n  },\n  subtitle: {\n    style: {\n      color: '#666666',\n      font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\n    }\n  },\n  xAxis: {\n    gridLineColor: '#333333',\n    gridLineWidth: 0,\n    labels: {\n      style: {\n        color: '#A0A0A0'\n      }\n    },\n    lineColor: '#A0A0A0',\n    tickColor: '#A0A0A0',\n    title: {\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold',\n        fontSize: '12px',\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n\n      }\n    }\n  },\n  yAxis: {\n    gridLineWidth: 0,\n    gridLineColor: '#333333',\n    labels: {\n      style: {\n        color: '#A0A0A0'\n      }\n    },\n    lineColor: '#A0A0A0',\n    minorTickInterval: null,\n    tickColor: '#A0A0A0',\n    tickWidth: 1,\n    title: {\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold',\n        fontSize: '12px',\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n      }\n    }\n  },\n  tooltip: {\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\n    style: {\n      color: '#F0F0F0'\n    }\n  },\n  toolbar: {\n    itemStyle: {\n      color: 'silver'\n    }\n  },\n  plotOptions: {\n    line: {\n      dataLabels: {\n        color: '#CCC'\n      },\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    spline: {\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    scatter: {\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    candlestick: {\n      lineColor: 'white'\n    }\n  },\n  legend: {\n    itemStyle: {\n      font: '9pt Trebuchet MS, Verdana, sans-serif',\n      color: '#A0A0A0'\n    },\n    itemHoverStyle: {\n      color: '#FFF'\n    },\n    itemHiddenStyle: {\n      color: '#444'\n    }\n  },\n  credits: {\n    enabled: false\n  },\n  labels: {\n    style: {\n      color: '#CCC'\n    }\n  },\n\n  navigation: {\n    buttonOptions: {\n      symbolStroke: '#DDDDDD',\n      hoverSymbolStroke: '#FFFFFF',\n      theme: {\n        fill: {\n          linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n          stops: [\n            [0.4, '#606060'],\n            [0.6, '#333333']\n          ]\n        },\n        stroke: '#000000'\n      }\n    }\n  },\n\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: {\n        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n        stops: [\n          [0.4, '#888'],\n          [0.6, '#555']\n        ]\n      },\n      stroke: '#000000',\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold'\n      },\n      states: {\n        hover: {\n          fill: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n              [0.4, '#BBB'],\n              [0.6, '#888']\n            ]\n          },\n          stroke: '#000000',\n          style: {\n            color: 'white'\n          }\n        },\n        select: {\n          fill: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n              [0.1, '#000'],\n              [0.3, '#333']\n            ]\n          },\n          stroke: '#000000',\n          style: {\n            color: 'yellow'\n          }\n        }\n      }\n    },\n    inputStyle: {\n      backgroundColor: '#333',\n      color: 'silver'\n    },\n    labelStyle: {\n      color: 'silver'\n    }\n  },\n\n  navigator: {\n    handles: {\n      backgroundColor: '#666',\n      borderColor: '#AAA'\n    },\n    outlineColor: '#CCC',\n    maskFill: 'rgba(16, 16, 16, 0.5)',\n    series: {\n      color: '#7798BF',\n      lineColor: '#A6C7ED'\n    }\n  },\n\n  scrollbar: {\n    barBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0.4, '#888'],\n        [0.6, '#555']\n      ]\n    },\n    barBorderColor: '#CCC',\n    buttonArrowColor: '#CCC',\n    buttonBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0.4, '#888'],\n        [0.6, '#555']\n      ]\n    },\n    buttonBorderColor: '#CCC',\n    rifleColor: '#FFF',\n    trackBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0, '#000'],\n        [1, '#333']\n      ]\n    },\n    trackBorderColor: '#666'\n  },\n\n  // special colors for some of the\n  legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',\n  background2: 'rgb(35, 35, 70)',\n  dataLabelsColor: '#444',\n  textColor: '#C0C0C0',\n  maskColor: 'rgba(255,255,255,0.3)'\n};\n\n\n// dark blue theme for highcharts\n// https://github.com/highcharts/highcharts/blob/master/js/themes/dark-blue.js","import styled from 'styled-components';\nimport {backgroundColor2, fontSize2} from \"../Shared/Styles\";\n\nexport default styled.select`\n  ${backgroundColor2}\n  ${fontSize2}\n  color: #1163c9; \n  border: 1px solid;\n  float: right; \n`;\n","import highchartsConfig from './HighchartsConfig';\nimport React from 'react';\nimport {Tile} from \"../Shared/Tile\";\nimport {AppContext} from \"../App/AppProvider\";\nimport ReactHighcharts from 'react-highcharts';\nimport HighchartsTheme from './HighchartsTheme';\nimport ChartSelect from './ChartSelect';\nReactHighcharts.Highcharts.setOptions(HighchartsTheme);\n// set options from high charts\n\nexport default function(){\n  return (\n    <AppContext.Consumer>\n      {({historical, changeChartSelect}) =>\n        <Tile>\n          <ChartSelect\n            defaultValue=\"months\"\n            onChange={e => changeChartSelect(e.target.value)}\n          >\n            <option value=\"days\"> Days </option>\n            <option value=\"weeks\"> Weeks </option>\n            <option value=\"months\"> Months </option>\n          </ChartSelect>\n          {historical ?\n            <ReactHighcharts config={highchartsConfig(historical)}/>\n            : <div> Loading Historical Data </div>\n          }\n        </Tile>\n      }\n    </AppContext.Consumer>\n  )\n}\n// adding loading historial data so that it shows that it is loading instead of rendering the prev data\n// adding days weeks month\n// default value is months\n// onchange  changes according to the  e target value \n","import React from 'react';\nimport styled from 'styled-components';\nimport Page from '../Shared/Page';\nimport PriceGrid from './PriceGrid';\nimport CoinSpotlight from './CoinSpotlight';\nimport PriceChart from './PriceChart';\n\nconst ChartGrid = styled.div`\n  display: grid; \n  margin-top: 20px; \n  grid-gap: 15px; \n  grid-template-columns: 1fr 3fr; \n`\n// wrap spotlight 1 fr and chart to be 3fr\n\nexport default function(){\n  return <Page name=\"dashboard\">\n    <PriceGrid/>\n    <ChartGrid>\n      <CoinSpotlight/>\n      <PriceChart/>\n    </ChartGrid>\n  </Page>\n}\n","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\n\nexport default function(props){\n  return <AppContext.Consumer>\n    {({coinList, prices, firstVisit}) => {\n      if(!coinList){\n        return <div> Loading Coins </div>\n      }\n      if(!firstVisit && !prices){\n        return <div> Loading Prices </div>\n      }\n      return <div> {props.children} </div>\n    }}\n  </AppContext.Consumer>\n}\n// check if first visit or there is a list of favorties","import React, { Component } from 'react';\nimport './App.css';\nimport AppLayout from './AppLayout';\nimport AppBar from './AppBar';\nimport {AppProvider} from './AppProvider';\nimport Settings from '../Settings';\nimport Dashboard from '../Dashboard';\nimport Content from '../Shared/Content';\n\nclass App extends Component {\n  render() {\n    return (\n      <AppLayout>\n        <AppProvider>\n          <AppBar/>\n          <Content>\n            <Settings />\n            <Dashboard />\n          </Content>\n        </AppProvider>\n      </AppLayout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}